# -*- coding: utf-8 -*-
"""interfazHS.py
Automatically generated by Colaboratory.
Original file is located at
    https://colab.research.google.com/drive/1Wh3LzvDxTf6n-mWqjW9JIpFA9u4w23Kc
"""

import numpy as np
from flask import Flask, request, jsonify, render_template, url_for
from keras.models import load_model
import pickle
from sklearn import svm
import tensorflow as tf
import h5py as h5
from tensorflow import keras
from tensorflow.keras import layers
import tensorflow_hub as hub
import streamlit as st
import tensorflow_text as text
import googletrans
from googletrans import Translator

# Se recibe la imagen y el modelo, devuelve la predicción
def model_prediction(x_in, model):

    x = np.asarray(x_in).reshape(1,-1)
    preds=model.predict(x)

    return preds

def main():

    # Se carga el modelo
    translator = Translator()
    spanishModel = keras.models.load_model("./spanishModel/")
    englishModel = keras.models.load_model("./englishModel/")

    # Título
    html_temp = """
    <h1 style="color:#DF3ADA;text-align:center;">IS THIS TWEET HATE SPEECH?</h1>
    </div>
    """
    st.markdown(html_temp,unsafe_allow_html=True)

    # Lecctura de datos
    tweet = st.text_input("Enter tweet as plain text:")

    # El botón predicción se usa para iniciar el procesamiento
    if st.button("Prediction:"):

        if len(tweet) == 0:
            output = "error, empty tweet, try again"
            st.error(output)
        else:
            detected = translator.detect(tweet.title())

            if detected.lang == 'en':

                x_in =[tweet.title()]
                predicts = np.array(model_prediction(x_in, englishModel))

                predicts_list = [predicts[0][0], predicts[0][1], predicts[0][2]]
                max_predict = max(predicts_list)

                if predicts[0][0] == max_predict:
                    output = "hate speech"
                elif predicts[0][1] == max_predict:
                    output = "offensive"
                elif predicts[0][2] == max_predict:
                    output = "neutral"
                st.success('This tweet is: {}'.format(output))

            elif detected.lang == 'es':

                x_in =[tweet.title()]
                predicts = np.array(model_prediction(x_in, spanishModel))

                st.success('This tweet is: {}'.format(predicts))

            else:
                output = "error, language not compatible"
                st.error(output)


if __name__ == '__main__':
    main()
